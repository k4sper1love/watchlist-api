x-def-logging: &default-logging
  logging:
    driver: "loki"
    options:
      loki-url: "http://localhost:3100/loki/api/v1/push"
      loki-batch-size: "100"
      loki-retries: "2"
      loki-max-backoff: "1000ms"
      loki-timeout: "1s"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    <<: *default-logging
    environment:
      USE_HTTPS: ${USE_HTTPS:-false}
      SERVER_HOST: ${SERVER_HOST:-localhost}
      APP_PORT: ${APP_PORT}
      APP_DSN: ${APP_DSN}
      APP_MIGRATIONS: ${APP_MIGRATIONS}
      APP_ENV: ${APP_ENV}
      APP_SECRET: ${APP_SECRET}
      VERSION: ${VERSION}
    ports:
      - "${APP_PORT}:${APP_PORT}"
      - "443:443"
    volumes:
      - certs:/root/certs
    depends_on:
      db:
        condition: service_healthy
    networks:
      - logging

  db:
    image: postgres:latest
    restart: always
    <<: *default-logging
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - pg-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    networks:
      - logging

  loki:
    image: grafana/loki:latest
    hostname: loki
    ports:
      - "3100:3100"
    volumes:
      - ./services/logs/loki/config.yaml:/etc/grafana/loki/config.yaml
      - loki-data:/loki
    command: -config.file=/etc/grafana/loki/config.yaml
    networks:
      - logging

  grafana:
    image: grafana/grafana:latest
    hostname: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_AUTH_ANONYMOUS_ENABLED: false
    volumes:
      - ./services/monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana
    networks:
      - logging

  prometheus:
    image: prom/prometheus:latest
    hostname: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./services/metrics/prometheus/generate_prometheus_config.sh:/usr/local/bin/generate_prometheus_config.sh
      - prometheus-data:/prometheus
    entrypoint: ["/usr/local/bin/generate_prometheus_config.sh"]
    environment:
      USE_HTTPS: ${USE_HTTPS:-false}
      APP_PORT: ${APP_PORT}
    networks:
      - logging

  node_exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    networks:
      - logging

volumes:
  certs:
  pg-data:
  grafana-data:
  loki-data:
  prometheus-data:

networks:
  logging:
    driver: bridge
